string = clone("/dev/string.lite", "string")
stream = clone("/dev/stream.lite", "stream")
io = clone("/dev/io.lite", "io")
integer_parser = clone("/dev/parser.lite", "integer")

http = capsule()
  transport = clone("/dev/net/layers/transport.lite", "tcp")
  
  request = capsule(verb, page)
    if verb not in ["GET", "POST"]
      return error("Invalid verb")
    phrase = "GET " + page + " HTTP/1.1\n"
    raw_response = transport.send(phrase)
    return process(raw_response)
  end
  
  process = capsule(raw_data)
    header = {}
    body = ""
    while (line = stream.read_line(raw_data)) != ""
      chunk = string.split(line, ":")
      header[chunk[0]] = string.sub(line, string.size(chunk[0]), string.size(line)-1)
    end
    body = line
  end
end

# sip = capsule(url)
#   url = url
#   transport = clone("/dev/net/layers/transport.lite", "udp")
# ...
# end

http_client = http()
response = http_client.request("GET", "http://www.example.com/a.html")
if integer_parser.parse(response.header["Status"]) == 200
  io.print(response.body)
else
  io.print("Not request")
end
